{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewSurveyForm.js","components/NewResponseForm.js","components/Survey.js","components/SurveyList.js","components/Response.js","components/SurveyDetail.js","components/EditSurvey.js","actions/ActionTypes.js","components/SurveyControl.js","actions/index.js","components/SignIn.js","components/App.js","reportWebVitals.js","reducers/index.js","reducers/response-list-reducer.js","reducers/form-visible-reducer.js","reducers/survey-list-reducer.js","firebase.js","index.js"],"names":["Header","state","activeItem","handleItemClick","e","name","setState","this","Menu","secondary","Item","className","as","Link","to","active","onClick","Component","ReusableForm","props","onSubmit","formSubmissionHandler","htmlFor","type","required","buttonText","NewSurveyForm","firestore","useFirestore","preventDefault","onNewSurveyCreation","collection","add","target","value","question1","question2","question3","question4","question5","NewResponseForm","survey","onResponseSubmission","title","response1","response2","response3","response4","response5","surveyId","id","Survey","whenSurveyClicked","SurveyList","useFirestoreConnect","surveyList","useSelector","ordered","surveys","isLoaded","map","onSurveySelection","key","Fragment","Response","onResponseDelete","SurveyDetail","onClickRespond","onClickDelete","auth","postList","responses","responsesVisible","buttonsVisible","currentUser","filter","response","EditSurvey","SurveyControl","handleRespondToSurvey","responding","handleClick","selectedSurvey","editing","dispatch","handleAddSurvey","handleDeletingSurvey","delete","doc","handleDeletingAllResponses","handleDeletingSingleResponse","where","get","then","querySnapshot","forEach","handleChangingSurvey","firestoreSurvey","handleAddResponse","selectedSurveyResponse","firebase","currentlyVisibleState","mainSurveyList","formVisible","responseList","mainResponseList","React","connect","withFirestore","SignIn","handleLogIn","loggedIn","handleLogOut","doSignUp","email","password","createUserWithEmailAndPassword","console","log","catch","error","message","doSignIn","event","signInEmail","signInPassword","signInWithEmailAndPassword","doSignOut","signOut","visibleState","placeholder","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","Object","assign","newState","firestoreReducer","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","initializeApp","store","createStore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c512195f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\n\r\nexport default class Header extends Component {\r\n\r\n  state = { activeItem: 'home' }\r\n  \r\n  handleItemClick = (e, { name }) => {\r\n    this.setState({ activeItem: name })\r\n  }\r\n  \r\n  render(){\r\n  \r\n    const { activeItem } = this.state\r\n    \r\n\r\n      return (\r\n        <Menu secondary>\r\n        <Menu.Item \r\n          name='Survey'\r\n          className='title'\r\n          />\r\n        <Menu.Item\r\n          as={Link} to=\"/\"\r\n          name='home'\r\n          active={activeItem === 'home'}\r\n          onClick={this.handleItemClick}\r\n          />\r\n        <Menu.Item\r\n          as={Link} to=\"/signIn\"\r\n          name='signIn'\r\n          active={activeItem === 'signIn'}\r\n          onClick={this.handleItemClick}\r\n          />\r\n      </Menu>\r\n      )\r\n    }\r\n  }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ReusableForm(props) {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.formSubmissionHandler}>\r\n        <label htmlFor=\"name\">Name: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className=\"form-control\"\r\n        required\r\n        />\r\n        <label htmlFor=\"question1\">Question: 1 </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question1\"\r\n        className=\"form-control\"\r\n        required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question2\">Question 2: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question2\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question3\">Question 3: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question3\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question4\">Question 4: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question4\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question5\">Question 5: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question5\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-dark\">{props.buttonText}</button>\r\n      </form>\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nReusableForm.propTypes = {\r\n  buttonText: PropTypes.string,\r\n  formSubmissionHandler: PropTypes.func,\r\n}\r\n","import React from 'react';\r\nimport ReusableForm from './ReusableForm';\r\nimport PropTypes from 'prop-types';\r\n// import {v4} from 'uuid';\r\nimport { useFirestore } from 'react-redux-firebase'\r\n\r\nexport default function NewSurveyForm(props) {\r\n\r\n  const firestore = useFirestore();\r\n\r\n  function addSurveyToFirestore(e)  {\r\n    e.preventDefault();\r\n    props.onNewSurveyCreation();\r\n    return firestore.collection('surveys').add({\r\n      name: e.target.name.value,\r\n      question1: e.target.question1.value,\r\n      question2: e.target.question2.value,\r\n      question3: e.target.question3.value,\r\n      question4: e.target.question4.value,\r\n      question5: e.target.question5.value\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <ReusableForm formSubmissionHandler={addSurveyToFirestore} \r\n      buttonText=\"Add New Survey\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nNewSurveyForm.propTypes = {\r\n  onNewSurveyCreation: PropTypes.func,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFirestore } from 'react-redux-firebase'\r\n\r\n\r\nexport default function NewResponseForm(props) {\r\n  const {survey} = props;\r\n  const firestore = useFirestore();\r\n\r\n  const handleAddResponseToFirestore = (e) => {\r\n    e.preventDefault();\r\n    props.onResponseSubmission();\r\n    return firestore.collection('responses').add({\r\n      title: survey.name,\r\n      response1: e.target.response1.value,\r\n      response2: e.target.response2.value,\r\n      response3: e.target.response3.value,\r\n      response4: e.target.response4.value,\r\n      response5: e.target.response5.value,\r\n      surveyId: survey.id,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2> {survey.name} </h2>\r\n        <form onSubmit={handleAddResponseToFirestore}>\r\n        <label htmlFor=\"response1\">{survey.question1}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response1\"\r\n        className=\"form-control\"\r\n        required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"response2\">{survey.question2}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response2\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"response3\">{survey.question3}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response3\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"response4\">{survey.question4}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response4\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"response\">{survey.question5}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response5\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-dark\">{props.buttonText}</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nNewResponseForm.propTypes = {\r\n  onResponseSubmission: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Survey(props) {\r\n  return (\r\n    <div className='card'>\r\n  \r\n      <details>\r\n        <summary className=\"survey-title\">{props.name}</summary>\r\n          <p>{props.question1}</p>\r\n          <p>{props.question2}</p>\r\n          <p>{props.question3}</p>\r\n          <p>{props.question4}</p>\r\n          <p>{props.question5}</p>\r\n      </details>\r\n      <button onClick={() => props.whenSurveyClicked(props.id)} className=\"btn btn-dark\">Details</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nSurvey.propTypes = {\r\n  name: PropTypes.string,\r\n  question1: PropTypes.string,\r\n  question2: PropTypes.string,\r\n  question3: PropTypes.string,\r\n  question4: PropTypes.string,\r\n  question5: PropTypes.string,\r\n  id: PropTypes.string,\r\n  whenSurveyClicked: PropTypes.func,\r\n}\r\n","import React from 'react'\r\nimport Survey from './Survey'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase'\r\n\r\nexport default function SurveyList(props) {\r\n  useFirestoreConnect([\r\n    { collection:'surveys'}\r\n  ])\r\n\r\n  const surveyList = useSelector(state => state.firestore.ordered.surveys)\r\n\r\n  if (isLoaded(surveyList)){\r\n    return (\r\n      <div>\r\n        {surveyList.map((survey) => {\r\n          return <Survey \r\n          whenSurveyClicked={props.onSurveySelection}\r\n          name= {survey.name}\r\n          question1 = {survey.question1}\r\n          question2 = {survey.question2}\r\n          question3 = {survey.question3}\r\n          question4 = {survey.question4}\r\n          question5 = {survey.question5}\r\n          id = {survey.id}\r\n          key={survey.id}\r\n          />\r\n        })}\r\n        \r\n      </div>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <React.Fragment>\r\n        <h4>Loading...</h4>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  }\r\n\r\n  SurveyList.propTypes = {\r\n    onSurveySelection: PropTypes.func,\r\n  }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Response(props) {\r\n  const {onResponseDelete} = props;\r\n  return (\r\n    <div className='card'>\r\n      <p>Response 1: {props.response1}</p>\r\n      <p>Response 2: {props.response2}</p>\r\n      <p>Response 3: {props.response3}</p>\r\n      <p>Response 4: {props.response4}</p>\r\n      <p>Response 5: {props.response5}</p>  \r\n      <button onClick={() => onResponseDelete(props.id)} className=\"btn btn-dark\">Delete Response</button>    \r\n    </div>\r\n  )\r\n}\r\n\r\nResponse.propTypes = {\r\n  title: PropTypes.string,\r\n  response1: PropTypes.string,\r\n  response2: PropTypes.string,\r\n  response3: PropTypes.string,\r\n  response4: PropTypes.string,\r\n  response5: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onResponseDelete: PropTypes.func\r\n}\r\n","import React from 'react';\r\nimport Response from './Response';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase'\r\nimport 'firebase/auth';\r\n\r\nexport default function SurveyDetail(props) {\r\n  const { survey, onClickRespond, onClickDelete, auth } = props;\r\n\r\n  useFirestoreConnect([{collection: 'responses'}])\r\n\r\n  const responses = useSelector(state => state.firestore.ordered.responses)\r\n  \r\n  const sortByID = (postList, id) => {\r\n    const foundResponses = postList.filter(response => response.surveyId === id);\r\n    return foundResponses\r\n  };\r\n  //this object is an array containing objects\r\n\r\n  let responsesVisible = null;\r\n  let buttonsVisible= null;\r\n  \r\n  if (isLoaded(auth) && (auth.currentUser !== null)) {\r\n    buttonsVisible =  \r\n    <div>\r\n      <button onClick={() => onClickRespond(survey.id)} className=\"btn btn-dark\">Respond to Survey</button>\r\n      <button onClick={() => onClickDelete(survey.id)} className=\"btn btn-dark\">Delete Survey</button>\r\n    </div>\r\n  } else {\r\n    buttonsVisible = <h2>Sign in to respond to survey</h2>\r\n  }\r\n\r\n  if (isLoaded(responses)) {\r\n    \r\n  const responseList = sortByID(responses, survey.id);\r\n\r\n  responsesVisible = responseList.map((response) => {\r\n    return <Response \r\n    title={response.title}\r\n    response1={response.response1}\r\n    response2={response.response2}\r\n    response3={response.response3}\r\n    response4={response.response4}\r\n    response5={response.response5}\r\n    id={response.id} \r\n    key={response.id}\r\n    onResponseDelete={props.onResponseDelete}/>\r\n    \r\n  })}\r\n  else {\r\n    responsesVisible = <React.Fragment>\r\n                        <h3>Loading...</h3>\r\n                      </React.Fragment>\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{survey.name}</h2>\r\n      <p>{survey.question1}</p>\r\n      <p>{survey.question2}</p>\r\n      <p>{survey.question3}</p>\r\n      <p>{survey.question4}</p>\r\n      <p>{survey.question5}</p>\r\n      {buttonsVisible}\r\n      <br />\r\n      {responsesVisible} \r\n    </div>\r\n  )}\r\n\r\n\r\nSurveyDetail.propTypes = {\r\n  survey: PropTypes.object,\r\n  onClickRespond: PropTypes.func,\r\n  responseList: PropTypes.object,\r\n  onClickDelete: PropTypes.func,\r\n  onResponseDelete: PropTypes.func\r\n}\r\n","import React from 'react';\r\nimport ReusableForm from './ReusableForm';\r\n\r\nexport default function EditSurvey() {\r\n  return (\r\n    <div>\r\n      <ReusableForm />\r\n    </div>\r\n  )\r\n}\r\n","export const ADD_SURVEY = 'ADD_SURVEY';\r\nexport const DELETE_SURVEY = 'DELETE_SURVEY';\r\nexport const ADD_RESPONSE = 'ADD_RESPONSE';\r\nexport const DELETE_RESPONSE = 'DELETE_RESPONSE';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';","import React from 'react'\r\nimport NewSurveyForm from './NewSurveyForm'\r\nimport NewResponseForm from './NewResponseForm'\r\nimport SurveyList from './SurveyList'\r\nimport SurveyDetail from './SurveyDetail'\r\nimport EditSurvey from './EditSurvey'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport * as a from './../actions'\r\nimport { withFirestore, isLoaded } from 'react-redux-firebase'\r\n\r\n\r\n\r\nclass SurveyControl extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedSurvey: null,\r\n      selectedSurveyResponse: null,\r\n      editing: false,\r\n      responding: false\r\n    };\r\n  }\r\n  \r\n  handleRespondToSurvey = () => {\r\n    this.setState({responding: true})\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (this.state.selectedSurvey != null) {\r\n      this.setState({\r\n        selectedSurvey: null,\r\n        editing: false,\r\n        responding: false\r\n      });\r\n    } else {\r\n      const { dispatch } = this.props;\r\n      const action = a.toggleForm();\r\n      dispatch(action);\r\n    }\r\n  }\r\n\r\n  handleAddSurvey = () => {\r\n    const {dispatch} = this.props;\r\n    const action2 = a.toggleForm();\r\n    dispatch(action2);\r\n  }\r\n\r\n  handleDeletingSurvey =(id) => {\r\n    this.props.firestore.delete({collection: 'surveys', doc: id})\r\n    this.handleDeletingAllResponses(id);\r\n    this.setState({selectedSurvey: null});\r\n  }\r\n\r\n  handleDeletingSingleResponse = (id) => {\r\n    this.props.firestore.delete({collection: 'responses', doc: id})\r\n  }\r\n\r\n  handleDeletingAllResponses = (id) => {\r\n    this.props.firestore.collection('responses')\r\n    .where('surveyId', \"==\", id)\r\n    .get()\r\n    .then(querySnapshot => {\r\n      querySnapshot.forEach((doc) => {\r\n        this.handleDeletingSingleResponse(doc.id)\r\n      })\r\n    })\r\n  }\r\n\r\n  handleChangingSurvey = (id) => {\r\n    this.props.firestore.get({collection: 'surveys', doc: id}).then((survey) => {\r\n      const firestoreSurvey = {\r\n        name: survey.get('name'),\r\n        question1: survey.get('question1'),\r\n        question2: survey.get('question2'),\r\n        question3: survey.get('question3'),\r\n        question4: survey.get('question4'),\r\n        question5: survey.get('question5'),\r\n        id: survey.id\r\n      }\r\n      this.setState({selectedSurvey: firestoreSurvey})\r\n    });\r\n  }\r\n\r\n  handleAddResponse = () => {\r\n    this.setState({responding: false});\r\n  }\r\n\r\n\r\n  render() {\r\n    const auth = this.props.firebase.auth();\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    if(!isLoaded(auth)) {\r\n      return (\r\n        <React.Fragment>\r\n          <h1>Loading...</h1>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n    if ((isLoaded(auth) && (auth.currentUser == null))) {        \r\n        currentlyVisibleState = <SurveyList surveyList={this.props.mainSurveyList}\r\n        onSurveySelection={this.handleChangingSurvey}/>\r\n        buttonText = \"Add Survey\";      \r\n    }\r\n    if (this.props.formVisible){\r\n      currentlyVisibleState = <NewSurveyForm onNewSurveyCreation={this.handleAddSurvey}\r\n      onResponseSubmission={this.handleAddResponse}/>\r\n      buttonText = \"Return to List\" ;\r\n    } \r\n    else if (this.state.responding){\r\n      currentlyVisibleState = <NewResponseForm \r\n      survey={this.state.selectedSurvey}\r\n      onResponseSubmission={this.handleAddResponse}\r\n      buttonText='Respond'\r\n      />\r\n      buttonText = 'Return To List';\r\n    }\r\n    else if (this.state.editing){\r\n      currentlyVisibleState = <EditSurvey />\r\n      buttonText = 'Return To List';\r\n    }\r\n    else if (this.state.selectedSurvey != null) {\r\n      currentlyVisibleState = <SurveyDetail\r\n      auth={auth} \r\n      survey={this.state.selectedSurvey} \r\n      onClickRespond={this.handleRespondToSurvey}\r\n      responseList={this.props.mainResponseList}\r\n      onClickDelete={this.handleDeletingSurvey}\r\n      onResponseDelete={this.handleDeletingSingleResponse} />\r\n      buttonText = \"Return to List\" ;\r\n    } \r\n    else {\r\n      currentlyVisibleState = <SurveyList surveyList={this.props.mainSurveyList}\r\n      onSurveySelection={this.handleChangingSurvey}/>\r\n      buttonText = \"Add Survey\";\r\n    }\r\n    return ( \r\n    <div>\r\n      {currentlyVisibleState}\r\n      <button onClick={this.handleClick} className=\"btn btn-dark\">{buttonText}</button>\r\n    </div>\r\n    );    \r\n  }\r\n}\r\n\r\nSurveyControl.propTypes = {\r\n  mainSurveyList: PropTypes.object,\r\n  formVisible: PropTypes.bool,\r\n  mainResponseList: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    mainSurveyList: state.mainSurveyList,\r\n    formVisible: state.formVisible,\r\n    mainResponseList: state.mainResponseList\r\n  }\r\n}\r\n\r\nSurveyControl = connect(mapStateToProps)(SurveyControl);\r\n\r\nexport default withFirestore(SurveyControl);\r\n\r\n\r\n","import * as c from './ActionTypes';\r\n\r\nexport const addSurvey = (survey) => {\r\n  const {name, question1, question2, question3, question4, question5, id} = survey;\r\n  return {\r\n    type: c.ADD_SURVEY,\r\n    name: name,\r\n    question1: question1,\r\n    question2: question2,\r\n    question3: question3,\r\n    question4: question4,\r\n    question5: question5,\r\n    id: id  \r\n  }\r\n}\r\n\r\nexport const toggleForm = () => ({\r\n  type: c.TOGGLE_FORM\r\n});\r\n\r\nexport const deleteSurvey = id => ({\r\n  type: c.DELETE_SURVEY,\r\n  id\r\n});\r\n\r\nexport const addResponse = (response) => {\r\n  const {title, response1, response2, response3, response4, response5, surveyId, id} = response;\r\n  return {\r\n    type: c.ADD_RESPONSE,\r\n    title: title,\r\n    response1: response1,\r\n    response2: response2,\r\n    response3: response3,\r\n    response4: response4,\r\n    response5: response5,\r\n    surveyId: surveyId,\r\n    id: id\r\n  }\r\n}\r\n\r\nexport const deleteResponse = id => ({\r\n  type: c.DELETE_RESPONSE,\r\n  id\r\n});","import React from 'react'\r\nimport firebase from 'firebase/app';\r\nimport { withFirestore, isLoaded } from 'react-redux-firebase'\r\nimport { connect } from 'react-redux'\r\n\r\nclass SignIn extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false,\r\n    };\r\n  }\r\n\r\n  handleLogIn = () =>{\r\n    this.setState({ loggedIn: true})\r\n\r\n  }\r\n  handleLogOut = () =>{\r\n    this.setState({ loggedIn: false})\r\n  }\r\n\r\n  doSignUp = (e)=>{\r\n    e.preventDefault();\r\n    const email = e.target.email.value;\r\n    const password = e.target.password.value;\r\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function(){\r\n      console.log('successfully signed up!')\r\n    }).catch(function(error){\r\n      console.log(error.message);\r\n    })\r\n    \r\n  }\r\n  \r\n  doSignIn=(event) =>{\r\n\r\n    event.preventDefault();\r\n    const email = event.target.signInEmail.value;\r\n    const password = event.target.signInPassword.value;\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function() {\r\n      console.log(\"Successfully signed in!\");\r\n    }).catch(function(error) {\r\n      console.log(error.message);\r\n    });\r\n    this.setState({loggedIn: true})\r\n    \r\n  }\r\n\r\n  doSignOut=(e)=> {\r\n    e.preventDefault()\r\n    firebase.auth().signOut().then(function() {\r\n      console.log(\"Successfully signed out!\");\r\n    }).catch(function(error) {\r\n      console.log(error.message);\r\n    });\r\n    this.setState({loggedIn: false})\r\n    \r\n  }\r\n  \r\n  render() {\r\n    const auth = this.props.firebase.auth();\r\n    let visibleState = null;\r\n\r\n    if (isLoaded(auth) && auth.currentUser === null){\r\n      visibleState = \r\n      <React.Fragment>\r\n        <h1>Sign Up</h1>\r\n        <form onSubmit={this.doSignUp}>\r\n        <input\r\n          type='text'\r\n          name='email'\r\n          placeholder='email'\r\n          className='form-control'/>\r\n          <br />\r\n        <input\r\n          type='password'\r\n          name='password'\r\n          placeholder='Password'\r\n          className='form-control'/>\r\n          <br />\r\n        <button type='submit' className=\"btn btn-dark\">Sign up</button>\r\n          </form>\r\n        <h1>Sign In</h1>\r\n        <form onSubmit={this.doSignIn}>\r\n          <input\r\n            type='text'\r\n            name='signInEmail'\r\n            placeholder='email'\r\n            className='form-control'/>\r\n            <br />\r\n          <input\r\n            type='password'\r\n            name='signInPassword'\r\n            placeholder='Password'\r\n            className='form-control'/>\r\n            <br />\r\n          <button type='submit' className=\"btn btn-dark\">Sign In</button>\r\n          </form> \r\n      </React.Fragment>\r\n    } else if (isLoaded(auth) && auth.currentUser != null){\r\n      visibleState = \r\n      <React.Fragment>\r\n        <button onClick={this.doSignOut} className=\"btn btn-dark\">Sign out</button>\r\n      </React.Fragment>\r\n    } else {\r\n      visibleState = <p>Loading...</p>\r\n    }\r\n\r\n  return(\r\n    <React.Fragment>\r\n      {visibleState}\r\n    </React.Fragment>\r\n    )\r\n  } \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    mainSurveyList: state.mainSurveyList,\r\n    formVisible: state.formVisible,\r\n    mainResponseList: state.mainResponseList\r\n  }\r\n}\r\n\r\nSignIn = connect(mapStateToProps)(SignIn);\r\n\r\nexport default withFirestore(SignIn);","\n\nimport React from 'react';\nimport Header from './Header'\nimport SurveyControl from './SurveyControl';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport SignIn from './SignIn'\n\nfunction App() {\n  return (\n    <Router>\n        <Header />\n      <div className=\"App container\">\n        <Switch>\n          <Route path=\"/signIn\">\n            <SignIn />\n          </Route>\n          <Route path=\"/\">\n        <SurveyControl />\n        </Route>\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import formVisibleReducer from './form-visible-reducer';\r\nimport surveyListReducer from './survey-list-reducer';\r\nimport responseListReducer from './response-list-reducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  mainResponseList: responseListReducer,\r\n  formVisible: formVisibleReducer,\r\n  mainSurveyList: surveyListReducer,\r\n  firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n  const { title, response1, response2, response3, response4, response5, surveyId, id } = action;\r\n  switch (action.type) {\r\n    case c.ADD_RESPONSE:\r\n      return Object.assign({}, state, {\r\n        [id]: {\r\n          title: title,\r\n          response1: response1,\r\n          response2: response2,\r\n          response3: response3,\r\n          response4: response4,\r\n          response5: response5,\r\n          surveyId: surveyId,\r\n          id: id\r\n        }\r\n      });\r\n    case c.DELETE_RESPONSE:\r\n      let newState = {...state};\r\n      delete newState[id];\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as c from './../actions/ActionTypes'\r\n\r\nexport default (state = false, action) => {\r\n  switch(action.type) {\r\n    case c.TOGGLE_FORM:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n  const { name, question1, question2, question3, question4, question5 , id } = action;\r\n  switch (action.type) {\r\n    case c.ADD_SURVEY:\r\n      return Object.assign({}, state, {\r\n        [id]: {\r\n          name: name,\r\n          question1: question1,\r\n          question2: question2,\r\n          question3: question3,\r\n          question4: question4,\r\n          question5: question5,\r\n          id: id\r\n        }\r\n      });\r\n    case c.DELETE_SURVEY:\r\n      let newState = {...state};\r\n      delete newState[id];\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}","import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID \r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore()\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport { createFirestoreInstance } from 'redux-firestore';\nimport firebase from \"./firebase\";\nimport 'semantic-ui-css/semantic.min.css';\nimport 'firebase/auth'\n\nconst store = createStore(rootReducer)\n\nconst rrfProps = {\n  firebase,\n  config: {\n        userProfile: \"users\",\n        useFirestoreForProfile: true,\n    },\n  dispatch: store.dispatch,\n  createFirestoreInstance\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}