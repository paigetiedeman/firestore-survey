{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewSurveyForm.js","components/NewResponseForm.js","components/Survey.js","components/SurveyList.js","components/Response.js","components/SurveyDetail.js","components/EditSurvey.js","components/SurveyControl.js","actions/index.js","actions/ActionTypes.js","components/App.js","reportWebVitals.js","reducers/index.js","reducers/response-list-reducer.js","reducers/form-visible-reducer.js","reducers/survey-list-reducer.js","index.js"],"names":["Header","ReusableForm","props","onSubmit","formSubmissionHandler","htmlFor","type","name","className","required","buttonText","NewSurveyForm","e","preventDefault","onNewSurveyCreation","target","value","question1","question2","question3","question4","question5","id","v4","NewResponseForm","survey","onResponseSubmission","title","response1","response2","response3","response4","response5","surveyId","for","Survey","onClick","whenSurveyClicked","SurveyList","Object","values","surveyList","map","onSurveySelection","key","Response","SurveyDetail","onClickRespond","responseList","responses","postList","foundResponses","entries","filter","response","fromEntries","sortByID","console","log","EditSurvey","SurveyControl","handleRespondToSurvey","setState","responding","handleClick","state","selectedSurvey","editing","dispatch","handleAddSurvey","newSurvey","handleChangingSurvey","foundSurvey","mainSurveyList","mainResponseList","selectedSurveyResponses","handleAddResponse","a","selectedSurveyResponse","currentlyVisibleState","this","formVisible","React","Component","connect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","assign","newState","store","createStore","subscribe","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ee87b71.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div>\r\n      <h1>Survey Site</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ReusableForm(props) {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.formSubmissionHandler}>\r\n        <label htmlFor=\"name\">Name: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className=\"form-control\"\r\n        required\r\n        />\r\n        <label htmlFor=\"question1\">Question: 1 </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question1\"\r\n        className=\"form-control\"\r\n        required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question2\">Question 2: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question2\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question3\">Question 3: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question3\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question4\">Question 4: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question4\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question5\">Question 5: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question5\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-dark\">{props.buttonText}</button>\r\n      </form>\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nReusableForm.propTypes = {\r\n  buttonText: PropTypes.string,\r\n  formSubmissionHandler: PropTypes.func,\r\n}\r\n","import React from 'react';\r\nimport ReusableForm from './ReusableForm';\r\nimport PropTypes from 'prop-types';\r\nimport {v4} from 'uuid';\r\n\r\nexport default function NewSurveyForm(props) {\r\n\r\n  function handleNewSurvey(e)  {\r\n    e.preventDefault();\r\n    props.onNewSurveyCreation({\r\n      name: e.target.name.value,\r\n      question1: e.target.question1.value,\r\n      question2: e.target.question2.value,\r\n      question3: e.target.question3.value,\r\n      question4: e.target.question4.value,\r\n      question5: e.target.question5.value,\r\n      id: v4()\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <ReusableForm formSubmissionHandler={handleNewSurvey} \r\n      buttonText=\"Add New Survey\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nNewSurveyForm.propTypes = {\r\n  onNewSurveyCreation: PropTypes.func,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {v4} from 'uuid';\r\n\r\nexport default function NewResponseForm(props) {\r\n  const {survey} = props;\r\n\r\n  const handleAddResponse = (e) => {\r\n    e.preventDefault();\r\n    props.onResponseSubmission({\r\n      title: survey.name,\r\n      response1: e.target.response1.value,\r\n      response2: e.target.response2.value,\r\n      response3: e.target.response3.value,\r\n      response4: e.target.response4.value,\r\n      response5: e.target.response5.value,\r\n      surveyId: survey.id,\r\n      id: v4()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2> {survey.name} </h2>\r\n        <form onSubmit={handleAddResponse}>\r\n        <label for=\"response1\">{survey.question1}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response1\"\r\n        className=\"form-control\"\r\n        required\r\n        />\r\n        <br />\r\n        <label for=\"response2\">{survey.question2}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response2\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label for=\"response3\">{survey.question3}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response3\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label for=\"response4\">{survey.question4}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response4\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label for=\"response\">{survey.question5}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response5\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-dark\">{props.buttonText}</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nNewResponseForm.propTypes = {\r\n  onResponseSubmission: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Survey(props) {\r\n  return (\r\n    <div className='card'>\r\n  \r\n      <details>\r\n        <summary className=\"survey-title\">{props.name}</summary>\r\n          <p>{props.question1}</p>\r\n          <p>{props.question2}</p>\r\n          <p>{props.question3}</p>\r\n          <p>{props.question4}</p>\r\n          <p>{props.question5}</p>\r\n      </details>\r\n      <button onClick={() => props.whenSurveyClicked(props.id)} className=\"btn btn-dark\">details</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nSurvey.propTypes = {\r\n  name: PropTypes.string,\r\n  question1: PropTypes.string,\r\n  question2: PropTypes.string,\r\n  question3: PropTypes.string,\r\n  question4: PropTypes.string,\r\n  question5: PropTypes.string,\r\n  id: PropTypes.string,\r\n  whenSurveyClicked: PropTypes.func,\r\n}\r\n","import React from 'react'\r\nimport Survey from './Survey'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function SurveyList(props) {\r\n  return (\r\n    <div>\r\n      {Object.values(props.surveyList).map((survey) => {\r\n        return <Survey \r\n          whenSurveyClicked={props.onSurveySelection}\r\n          name= {survey.name}\r\n          question1 = {survey.question1}\r\n          question2 = {survey.question2}\r\n          question3 = {survey.question3}\r\n          question4 = {survey.question4}\r\n          question5 = {survey.question5}\r\n          id = {survey.id}\r\n          key={survey.id}\r\n        />\r\n      })}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nSurveyList.propTypes = {\r\n  surveyList: PropTypes.object,\r\n  onSurveySelection: PropTypes.func,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Response(props) {\r\n  return (\r\n    <div>\r\n      <p>Response 1: {props.response1}</p>\r\n      <p>Response 2: {props.response2}</p>\r\n      <p>Response 3: {props.response3}</p>\r\n      <p>Response 4: {props.response4}</p>\r\n      <p>Response 5: {props.response5}</p>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nResponse.propTypes = {\r\n  title: PropTypes.string,\r\n  response1: PropTypes.string,\r\n  response2: PropTypes.string,\r\n  response3: PropTypes.string,\r\n  response4: PropTypes.string,\r\n  response5: PropTypes.string,\r\n  id: PropTypes.string,\r\n}\r\n","import React from 'react';\r\nimport Response from './Response';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function SurveyDetail(props) {\r\n  const { survey, onClickRespond, responseList } = props;\r\n  \r\n  const sortByID = (postList, id) => {\r\n    const arrayResponses = Object.entries(responseList);\r\n    const foundResponses = arrayResponses.filter(response => response[1].surveyId === survey.id);\r\n    return Object.fromEntries(foundResponses);\r\n  };\r\n  const responses = sortByID(responseList, survey.id);\r\n  \r\n  console.log(responses)\r\n  console.log(responseList)\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>{survey.name}</h2>\r\n      <p>{survey.question1}</p>\r\n      <p>{survey.question2}</p>\r\n      <p>{survey.question3}</p>\r\n      <p>{survey.question4}</p>\r\n      <p>{survey.question5}</p>\r\n      <button onClick={() => onClickRespond(survey.id)} className=\"btn btn-dark\">respond to survey</button>\r\n      {Object.values(responses).map((response) => {\r\n        return <Response \r\n        title={response.title}\r\n        response1={response.response1}\r\n        response2={response.response2}\r\n        response3={response.response3}\r\n        response4={response.response4}\r\n        response5={response.response5}\r\n        id={response.id}\r\n        \r\n        />\r\n      })}\r\n    </div>\r\n  )}\r\n\r\n\r\n\r\nSurveyDetail.propTypes = {\r\n  survey: PropTypes.object,\r\n  onClickRespond: PropTypes.func,\r\n  responseList: PropTypes.object\r\n}\r\n","import React from 'react';\r\nimport ReusableForm from './ReusableForm';\r\n\r\nexport default function EditSurvey() {\r\n  return (\r\n    <div>\r\n      <ReusableForm />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport NewSurveyForm from './NewSurveyForm'\r\nimport NewResponseForm from './NewResponseForm'\r\nimport SurveyList from './SurveyList'\r\nimport SurveyDetail from './SurveyDetail'\r\nimport EditSurvey from './EditSurvey'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport * as a from './../actions'\r\nimport { withFirestore } from 'react-redux-firebase'\r\n\r\nclass SurveyControl extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedSurvey: null,\r\n      selectedSurveyResponse: null,\r\n      editing: false,\r\n      responding: false\r\n    };\r\n  }\r\n  \r\n\r\n  handleRespondToSurvey = () => {\r\n    this.setState({responding: true})\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (this.state.selectedSurvey != null) {\r\n      this.setState({\r\n        selectedSurvey: null,\r\n        editing: false,\r\n        responding: false\r\n      });\r\n    } else {\r\n      const { dispatch } = this.props;\r\n      const action = a.toggleForm();\r\n      dispatch(action);\r\n    }\r\n  }\r\n\r\n\r\n  handleAddSurvey = (newSurvey) => {\r\n    const {dispatch} = this.props;\r\n    const action = a.addSurvey(newSurvey);\r\n    dispatch(action);\r\n    const action2 = a.toggleForm();\r\n    dispatch(action2);\r\n  }\r\n\r\n  //.where()\r\n  //.reduce()\r\n  //.find()\r\n\r\n  handleChangingSurvey = (id) => {\r\n    const foundSurvey = this.props.mainSurveyList[id];\r\n    const arrayResponses = Object.entries(this.props.mainResponseList);\r\n    const foundResponses = arrayResponses.filter(response => response.surveyId === id);\r\n    this.setState({\r\n      selectedSurvey: foundSurvey,\r\n      selectedSurveyResponses: foundResponses\r\n    })\r\n  }\r\n\r\n  handleAddResponse = (response) => {\r\n    const {dispatch} = this.props;\r\n    const action = a.addResponse(response);\r\n    dispatch(action);\r\n    this.setState({responding: false});\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    if(this.props.formVisible){\r\n      currentlyVisibleState = <NewSurveyForm onNewSurveyCreation={this.handleAddSurvey}\r\n      onResponseSubmission={this.handleAddResponse}/>\r\n      buttonText = \"Return to List\" ;\r\n    } \r\n    else if (this.state.responding){\r\n      currentlyVisibleState = <NewResponseForm \r\n      survey={this.state.selectedSurvey}\r\n      onResponseSubmission={this.handleAddResponse}\r\n      buttonText='Respond'\r\n      />\r\n      buttonText = 'Return To List';\r\n    }\r\n    else if (this.state.editing){\r\n      currentlyVisibleState = <EditSurvey />\r\n      buttonText = 'Return To List';\r\n    }\r\n    else if(this.state.selectedSurvey != null) {\r\n      currentlyVisibleState = <SurveyDetail \r\n      survey={this.state.selectedSurvey} \r\n      onClickRespond={this.handleRespondToSurvey}\r\n      responseList={this.props.mainResponseList} />\r\n      buttonText = \"Return to List\" ;\r\n\r\n    \r\n    } \r\n    else {\r\n      currentlyVisibleState = <SurveyList surveyList={this.props.mainSurveyList}\r\n      onSurveySelection={this.handleChangingSurvey}/>\r\n      buttonText = \"Add Survey\";\r\n    }\r\n    return ( \r\n    <div>\r\n      {currentlyVisibleState}\r\n      <button onClick={this.handleClick} className=\"btn btn-dark\">{buttonText}</button>\r\n    </div>\r\n    );    \r\n  }\r\n}\r\n\r\nSurveyControl.propTypes = {\r\n  mainSurveyList: PropTypes.object,\r\n  formVisible: PropTypes.bool,\r\n  mainResponseList: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    mainSurveyList: state.mainSurveyList,\r\n    formVisible: state.formVisible,\r\n    mainResponseList: state.mainResponseList\r\n  }\r\n}\r\n\r\nSurveyControl = connect(mapStateToProps)(SurveyControl);\r\n\r\nexport default SurveyControl;\r\n\r\n\r\n","import * as c from './ActionTypes';\r\n\r\nexport const addSurvey = (survey) => {\r\n  const {name, question1, question2, question3, question4, question5, id} = survey;\r\n  return {\r\n    type: c.ADD_SURVEY,\r\n    name: name,\r\n    question1: question1,\r\n    question2: question2,\r\n    question3: question3,\r\n    question4: question4,\r\n    question5: question5,\r\n    id: id  \r\n  }\r\n}\r\n\r\nexport const toggleForm = () => ({\r\n  type: c.TOGGLE_FORM\r\n});\r\n\r\nexport const deleteSurvey = id => ({\r\n  type: c.DELETE_SURVEY,\r\n  id\r\n});\r\n\r\nexport const addResponse = (response) => {\r\n  const {title, response1, response2, response3, response4, response5, surveyId, id} = response;\r\n  return {\r\n    type: c.ADD_RESPONSE,\r\n    title: title,\r\n    response1: response1,\r\n    response2: response2,\r\n    response3: response3,\r\n    response4: response4,\r\n    response5: response5,\r\n    surveyId: surveyId,\r\n    id: id\r\n  }\r\n}\r\n\r\nexport const deleteResponse = id => ({\r\n  type: c.DELETE_RESPONSE,\r\n  id\r\n});","export const ADD_SURVEY = 'ADD_SURVEY';\r\nexport const DELETE_SURVEY = 'DELETE_SURVEY';\r\nexport const ADD_RESPONSE = 'ADD_RESPONSE';\r\nexport const DELETE_RESPONSE = 'DELETE_RESPONSE';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';","import React from 'react';\nimport Header from './Header'\nimport SurveyControl from './SurveyControl';\n\n//routing happens here\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <Header />\n      <SurveyControl />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import formVisibleReducer from './form-visible-reducer';\r\nimport surveyListReducer from './survey-list-reducer';\r\nimport responseListReducer from './response-list-reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  mainResponseList: responseListReducer,\r\n  formVisible: formVisibleReducer,\r\n  mainSurveyList: surveyListReducer\r\n});\r\n\r\nexport default rootReducer;","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n  const { title, response1, response2, response3, response4, response5, surveyId, id } = action;\r\n  switch (action.type) {\r\n    case c.ADD_RESPONSE:\r\n      return Object.assign({}, state, {\r\n        [id]: {\r\n          title: title,\r\n          response1: response1,\r\n          response2: response2,\r\n          response3: response3,\r\n          response4: response4,\r\n          response5: response5,\r\n          surveyId: surveyId,\r\n          id: id\r\n        }\r\n      });\r\n    case c.DELETE_RESPONSE:\r\n      let newState = {...state};\r\n      delete newState[id];\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as c from './../actions/ActionTypes'\r\n\r\nexport default (state = false, action) => {\r\n  switch(action.type) {\r\n    case c.TOGGLE_FORM:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n  const { name, question1, question2, question3, question4, question5 , id } = action;\r\n  switch (action.type) {\r\n    case c.ADD_SURVEY:\r\n      return Object.assign({}, state, {\r\n        [id]: {\r\n          name: name,\r\n          question1: question1,\r\n          question2: question2,\r\n          question3: question3,\r\n          question4: question4,\r\n          question5: question5,\r\n          id: id\r\n        }\r\n      });\r\n    case c.DELETE_SURVEY:\r\n      let newState = {...state};\r\n      delete newState[id];\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index'\n\nconst store = createStore(rootReducer)\n\nstore.subscribe(() =>\n  console.log(store.getState())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider> ,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}