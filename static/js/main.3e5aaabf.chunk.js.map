{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewSurveyForm.js","components/NewResponseForm.js","components/Survey.js","components/SurveyList.js","components/SurveyDetail.js","components/EditSurvey.js","components/SurveyControl.js","actions/index.js","actions/ActionTypes.js","components/App.js","reportWebVitals.js","reducers/index.js","reducers/response-list-reducer.js","reducers/form-visible-reducer.js","reducers/survey-list-reducer.js","index.js"],"names":["Header","ReusableForm","props","onSubmit","formSubmissionHandler","htmlFor","type","name","className","required","buttonText","NewSurveyForm","e","preventDefault","onNewSurveyCreation","target","value","question1","question2","question3","question4","question5","id","v4","NewResponseForm","survey","onResponseSubmission","title","response1","response2","response3","response4","response5","surveyId","for","Survey","onClick","whenSurveyClicked","SurveyList","Object","values","surveyList","map","onSurveySelection","key","SurveyDetail","onClickRespond","EditSurvey","SurveyControl","handleRespondToSurvey","setState","responding","handleClick","state","selectedSurvey","editing","dispatch","handleAddSurvey","newSurvey","handleChangingSurvey","foundSurvey","mainSurveyList","handleAddResponse","response","a","currentlyVisibleState","this","formVisible","React","Component","connect","mainResponseList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","assign","newState","store","createStore","subscribe","console","log","getState","ReactDOM","render","document","getElementById"],"mappings":"wNAEe,SAASA,IACtB,OACE,6BACE,4C,wCCFS,SAASC,EAAaC,GACnC,OACE,6BACE,0BAAMC,SAAUD,EAAME,uBACpB,2BAAOC,QAAQ,QAAf,UACA,2BACAC,KAAK,OACLC,KAAK,OACLC,UAAU,eACVC,UAAQ,IAER,2BAAOJ,QAAQ,aAAf,gBACA,2BACAC,KAAK,OACLC,KAAK,YACLC,UAAU,eACVC,UAAQ,IAER,6BACA,2BAAOJ,QAAQ,aAAf,gBACA,2BACAC,KAAK,OACLC,KAAK,YACLC,UAAU,iBAEV,6BACA,2BAAOH,QAAQ,aAAf,gBACA,2BACAC,KAAK,OACLC,KAAK,YACLC,UAAU,iBAEV,6BACA,2BAAOH,QAAQ,aAAf,gBACA,2BACAC,KAAK,OACLC,KAAK,YACLC,UAAU,iBAEV,6BACA,2BAAOH,QAAQ,aAAf,gBACA,2BACAC,KAAK,OACLC,KAAK,YACLC,UAAU,iBAEV,6BACA,4BAAQF,KAAK,SAASE,UAAU,gBAAgBN,EAAMQ,aAExD,8B,YC/CS,SAASC,EAAcT,GAepC,OACE,6BACE,kBAACD,EAAD,CAAcG,sBAflB,SAAyBQ,GACvBA,EAAEC,iBACFX,EAAMY,oBAAoB,CACxBP,KAAMK,EAAEG,OAAOR,KAAKS,MACpBC,UAAWL,EAAEG,OAAOE,UAAUD,MAC9BE,UAAWN,EAAEG,OAAOG,UAAUF,MAC9BG,UAAWP,EAAEG,OAAOI,UAAUH,MAC9BI,UAAWR,EAAEG,OAAOK,UAAUJ,MAC9BK,UAAWT,EAAEG,OAAOM,UAAUL,MAC9BM,GAAIC,kBAOJb,WAAW,oBCnBF,SAASc,EAAgBtB,GACtC,IAAOuB,EAAUvB,EAAVuB,OAgBP,OACE,6BACE,gCAAMA,EAAOlB,KAAb,KACE,0BAAMJ,SAjBc,SAACS,GACzBA,EAAEC,iBACFX,EAAMwB,qBAAqB,CACzBC,MAAOF,EAAOlB,KACdqB,UAAWhB,EAAEG,OAAOa,UAAUZ,MAC9Ba,UAAWjB,EAAEG,OAAOc,UAAUb,MAC9Bc,UAAWlB,EAAEG,OAAOe,UAAUd,MAC9Be,UAAWnB,EAAEG,OAAOgB,UAAUf,MAC9BgB,UAAWpB,EAAEG,OAAOiB,UAAUhB,MAC9BiB,SAAUR,EAAOH,GACjBA,GAAIC,mBAQF,2BAAOW,IAAI,aAAaT,EAAOR,WAC/B,2BACAX,KAAK,OACLC,KAAK,YACLC,UAAU,eACVC,UAAQ,IAER,6BACA,2BAAOyB,IAAI,aAAaT,EAAOP,WAC/B,2BACAZ,KAAK,OACLC,KAAK,YACLC,UAAU,iBAEV,6BACA,2BAAO0B,IAAI,aAAaT,EAAON,WAC/B,2BACAb,KAAK,OACLC,KAAK,YACLC,UAAU,iBAEV,6BACA,2BAAO0B,IAAI,aAAaT,EAAOL,WAC/B,2BACAd,KAAK,OACLC,KAAK,YACLC,UAAU,iBAEV,6BACA,2BAAO0B,IAAI,YAAYT,EAAOJ,WAC9B,2BACAf,KAAK,OACLC,KAAK,YACLC,UAAU,iBAEV,6BACA,4BAAQF,KAAK,SAASE,UAAU,gBAAgBN,EAAMQ,cC1D/C,SAASyB,EAAOjC,GAC7B,OACE,yBAAKM,UAAU,QAEb,iCACE,6BAASA,UAAU,gBAAgBN,EAAMK,MACvC,2BAAIL,EAAMe,WACV,2BAAIf,EAAMgB,WACV,2BAAIhB,EAAMiB,WACV,2BAAIjB,EAAMkB,WACV,2BAAIlB,EAAMmB,YAEd,4BAAQe,QAAS,kBAAMlC,EAAMmC,kBAAkBnC,EAAMoB,KAAKd,UAAU,gBAApE,YCXS,SAAS8B,EAAWpC,GACjC,OACE,6BACGqC,OAAOC,OAAOtC,EAAMuC,YAAYC,KAAI,SAACjB,GACpC,OAAO,kBAACU,EAAD,CACLE,kBAAmBnC,EAAMyC,kBACzBpC,KAAOkB,EAAOlB,KACdU,UAAaQ,EAAOR,UACpBC,UAAaO,EAAOP,UACpBC,UAAaM,EAAON,UACpBC,UAAaK,EAAOL,UACpBC,UAAaI,EAAOJ,UACpBC,GAAMG,EAAOH,GACbsB,IAAKnB,EAAOH,SCbP,SAASuB,EAAa3C,GACnC,IAAQuB,EAA2BvB,EAA3BuB,OAAQqB,EAAmB5C,EAAnB4C,eAEhB,OACE,6BACE,4BAAKrB,EAAOlB,MACZ,2BAAIkB,EAAOR,WACX,2BAAIQ,EAAOP,WACX,2BAAIO,EAAON,WACX,2BAAIM,EAAOL,WACX,2BAAIK,EAAOJ,WACX,4BAAQe,QAAS,kBAAMU,EAAerB,EAAOH,KAAKd,UAAU,gBAA5D,sBCZS,SAASuC,IACtB,OACE,6BACE,kBAAC9C,EAAD,O,YCKA+C,G,yDAEJ,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IAQR+C,sBAAwB,WACtB,EAAKC,SAAS,CAACC,YAAY,KAVV,EAanBC,YAAc,WACqB,MAA7B,EAAKC,MAAMC,eACb,EAAKJ,SAAS,CACZI,eAAgB,KAChBC,SAAS,EACTJ,YAAY,KAKdK,EAFqB,EAAKtD,MAAlBsD,UClBmB,CAC/BlD,KCbyB,iBFSN,EA4BnBmD,gBAAkB,SAACC,GACjB,ICxCsBjC,EDwCf+B,EAAY,EAAKtD,MAAjBsD,SAEPA,ECxCK,CACLlD,KCLsB,aDMtBC,MAJsBkB,EDyCKiC,GCxCtBnD,KAILU,UAJwEQ,EAA7DR,UAKXC,UALwEO,EAAlDP,UAMtBC,UANwEM,EAAvCN,UAOjCC,UAPwEK,EAA5BL,UAQ5CC,UARwEI,EAAjBJ,UASvDC,GATwEG,EAANH,KD2ClEkC,EC9B6B,CAC/BlD,KCbyB,iBFSN,EAoCnBqD,qBAAuB,SAACrC,GACtB,IAAMsC,EAAc,EAAK1D,MAAM2D,eAAevC,GAC9C,EAAK4B,SAAS,CAACI,eAAgBM,KAtCd,EAyCnBE,kBAAoB,SAACC,IAGnBP,EAFmB,EAAKtD,MAAjBsD,UC9BgB,SAACO,GAE1B,MAAO,CACLzD,KC1BwB,eD2BxBqB,MAHmFoC,EAA9EpC,MAILC,UAJmFmC,EAAvEnC,UAKZC,UALmFkC,EAA5DlC,UAMvBC,UANmFiC,EAAjDjC,UAOlCC,UAPmFgC,EAAtChC,UAQ7CC,UARmF+B,EAA3B/B,UASxDC,SATmF8B,EAAhB9B,SAUnEX,GAVmFyC,EAANzC,ID8B9D0C,CAAcD,IAE7B,EAAKb,SAAS,CAACC,YAAY,KA3C3B,EAAKE,MAAQ,CACXC,eAAgB,KAChBC,SAAS,EACTJ,YAAY,GALG,E,0CAkDnB,WACE,IAAIc,EAAwB,KACxBvD,EAAa,KA6BjB,OA5BGwD,KAAKhE,MAAMiE,aACZF,EAAwB,kBAACtD,EAAD,CAAeG,oBAAqBoD,KAAKT,gBACjE/B,qBAAsBwC,KAAKJ,oBAC3BpD,EAAa,kBAENwD,KAAKb,MAAMF,YAClBc,EAAwB,kBAACzC,EAAD,CACxBC,OAAQyC,KAAKb,MAAMC,eACnB5B,qBAAsBwC,KAAKJ,kBAC3BpD,WAAW,YAEXA,EAAa,kBAENwD,KAAKb,MAAME,SAClBU,EAAwB,kBAAClB,EAAD,MACxBrC,EAAa,kBAEsB,MAA7BwD,KAAKb,MAAMC,gBACjBW,EAAwB,kBAACpB,EAAD,CACxBpB,OAAQyC,KAAKb,MAAMC,eACnBR,eAAgBoB,KAAKjB,wBACrBvC,EAAa,mBAGbuD,EAAwB,kBAAC3B,EAAD,CAAYG,WAAYyB,KAAKhE,MAAM2D,eAC3DlB,kBAAmBuB,KAAKP,uBACxBjD,EAAa,cAGf,6BACGuD,EACD,4BAAQ7B,QAAS8B,KAAKd,YAAa5C,UAAU,gBAAgBE,Q,GAtFvC0D,IAAMC,YA2GnBrB,EAFfA,EAAgBsB,aARQ,SAAAjB,GACtB,MAAO,CACLQ,eAAgBR,EAAMQ,eACtBM,YAAad,EAAMc,YACnBI,iBAAkBlB,EAAMkB,oBAIZD,CAAyBtB,GGrG1BwB,MATf,WACE,OACE,yBAAKhE,UAAU,iBACb,kBAACR,EAAD,MACA,kBAAC,EAAD,QCESyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCICQ,EANKC,YAAgB,CAClCZ,iBCJa,WAAyB,IAAxBlB,EAAuB,uDAAf,GAAI+B,EAAW,uCAC7BzD,EAA+EyD,EAA/EzD,MAAOC,EAAwEwD,EAAxExD,UAAWC,EAA6DuD,EAA7DvD,UAAWC,EAAkDsD,EAAlDtD,UAAWC,EAAuCqD,EAAvCrD,UAAWC,EAA4BoD,EAA5BpD,UAAWC,EAAiBmD,EAAjBnD,SAAUX,EAAO8D,EAAP9D,GAChF,OAAQ8D,EAAO9E,MACb,IJHwB,eIItB,OAAOiC,OAAO8C,OAAO,GAAIhC,EAAlBd,OAAA,IAAAA,CAAA,GACJjB,EAAK,CACJK,MAAOA,EACPC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,SAAUA,EACVX,GAAIA,KAGV,IJf2B,kBIgBzB,IAAIgE,EAAQ,eAAOjC,GAEnB,cADOiC,EAAShE,GACTgE,EACT,QACE,OAAOjC,IDhBXc,YELa,WAA4B,IAA3Bd,EAA0B,wDAAX+B,EAAW,uCACxC,OAAOA,EAAO9E,MACZ,ILAuB,cKCrB,OAAQ+C,EACV,QACE,OAAOA,IFCXQ,eGNa,WAAyB,IAAxBR,EAAuB,uDAAf,GAAI+B,EAAW,uCAC7B7E,EAAqE6E,EAArE7E,KAAMU,EAA+DmE,EAA/DnE,UAAWC,EAAoDkE,EAApDlE,UAAWC,EAAyCiE,EAAzCjE,UAAWC,EAA8BgE,EAA9BhE,UAAWC,EAAmB+D,EAAnB/D,UAAYC,EAAO8D,EAAP9D,GACtE,OAAQ8D,EAAO9E,MACb,INLsB,aMMpB,OAAOiC,OAAO8C,OAAO,GAAIhC,EAAlBd,OAAA,IAAAA,CAAA,GACJjB,EAAK,CACJf,KAAMA,EACNU,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,UAAWA,EACXC,GAAIA,KAGV,INhByB,gBMiBvB,IAAIgE,EAAQ,eAAOjC,GAEnB,cADOiC,EAAShE,GACTgE,EACT,QACE,OAAOjC,MCZPkC,EAAQC,YAAYN,GAE1BK,EAAME,WAAU,kBACdC,QAAQC,IAAIJ,EAAMK,eAGpBC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,OAGFQ,SAASC,eAAe,SAM1BvB,M","file":"static/js/main.3e5aaabf.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div>\r\n      <h1>Survey Site</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ReusableForm(props) {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.formSubmissionHandler}>\r\n        <label htmlFor=\"name\">Name: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        className=\"form-control\"\r\n        required\r\n        />\r\n        <label htmlFor=\"question1\">Question: 1 </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question1\"\r\n        className=\"form-control\"\r\n        required\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question2\">Question 2: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question2\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question3\">Question 3: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question3\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question4\">Question 4: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question4\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label htmlFor=\"question5\">Question 5: </label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"question5\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-dark\">{props.buttonText}</button>\r\n      </form>\r\n      <br />\r\n    </div>\r\n  )\r\n}\r\n\r\nReusableForm.propTypes = {\r\n  buttonText: PropTypes.string,\r\n  formSubmissionHandler: PropTypes.func,\r\n}\r\n","import React from 'react';\r\nimport ReusableForm from './ReusableForm';\r\nimport PropTypes from 'prop-types';\r\nimport {v4} from 'uuid';\r\n\r\nexport default function NewSurveyForm(props) {\r\n\r\n  function handleNewSurvey(e)  {\r\n    e.preventDefault();\r\n    props.onNewSurveyCreation({\r\n      name: e.target.name.value,\r\n      question1: e.target.question1.value,\r\n      question2: e.target.question2.value,\r\n      question3: e.target.question3.value,\r\n      question4: e.target.question4.value,\r\n      question5: e.target.question5.value,\r\n      id: v4()\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <ReusableForm formSubmissionHandler={handleNewSurvey} \r\n      buttonText=\"Add New Survey\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nNewSurveyForm.propTypes = {\r\n  onNewSurveyCreation: PropTypes.func,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {v4} from 'uuid';\r\n\r\nexport default function NewResponseForm(props) {\r\n  const {survey} = props;\r\n\r\n  const handleAddResponse = (e) => {\r\n    e.preventDefault();\r\n    props.onResponseSubmission({\r\n      title: survey.name,\r\n      response1: e.target.response1.value,\r\n      response2: e.target.response2.value,\r\n      response3: e.target.response3.value,\r\n      response4: e.target.response4.value,\r\n      response5: e.target.response5.value,\r\n      surveyId: survey.id,\r\n      id: v4()\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2> {survey.name} </h2>\r\n        <form onSubmit={handleAddResponse}>\r\n        <label for=\"response1\">{survey.question1}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response1\"\r\n        className=\"form-control\"\r\n        required\r\n        />\r\n        <br />\r\n        <label for=\"response2\">{survey.question2}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response2\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label for=\"response3\">{survey.question3}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response3\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label for=\"response4\">{survey.question4}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response4\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <label for=\"response\">{survey.question5}</label>\r\n        <input\r\n        type=\"text\"\r\n        name=\"response5\"\r\n        className=\"form-control\"\r\n        />\r\n        <br />\r\n        <button type=\"submit\" className=\"btn btn-dark\">{props.buttonText}</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nNewResponseForm.propTypes = {\r\n  onResponseSubmission: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Survey(props) {\r\n  return (\r\n    <div className='card'>\r\n  \r\n      <details>\r\n        <summary className=\"survey-title\">{props.name}</summary>\r\n          <p>{props.question1}</p>\r\n          <p>{props.question2}</p>\r\n          <p>{props.question3}</p>\r\n          <p>{props.question4}</p>\r\n          <p>{props.question5}</p>\r\n      </details>\r\n      <button onClick={() => props.whenSurveyClicked(props.id)} className=\"btn btn-dark\">details</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nSurvey.propTypes = {\r\n  name: PropTypes.string,\r\n  question1: PropTypes.string,\r\n  question2: PropTypes.string,\r\n  question3: PropTypes.string,\r\n  question4: PropTypes.string,\r\n  question5: PropTypes.string,\r\n  id: PropTypes.string,\r\n  whenSurveyClicked: PropTypes.func,\r\n}\r\n","import React from 'react'\r\nimport Survey from './Survey'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function SurveyList(props) {\r\n  return (\r\n    <div>\r\n      {Object.values(props.surveyList).map((survey) => {\r\n        return <Survey \r\n          whenSurveyClicked={props.onSurveySelection}\r\n          name= {survey.name}\r\n          question1 = {survey.question1}\r\n          question2 = {survey.question2}\r\n          question3 = {survey.question3}\r\n          question4 = {survey.question4}\r\n          question5 = {survey.question5}\r\n          id = {survey.id}\r\n          key={survey.id}\r\n        />\r\n      })}\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nSurveyList.propTypes = {\r\n  surveyList: PropTypes.object,\r\n  onSurveySelection: PropTypes.func,\r\n}\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function SurveyDetail(props) {\r\n  const { survey, onClickRespond } = props;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{survey.name}</h2>\r\n      <p>{survey.question1}</p>\r\n      <p>{survey.question2}</p>\r\n      <p>{survey.question3}</p>\r\n      <p>{survey.question4}</p>\r\n      <p>{survey.question5}</p>\r\n      <button onClick={() => onClickRespond(survey.id)} className=\"btn btn-dark\">respond to survey</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nSurveyDetail.propTypes = {\r\n  survey: PropTypes.object,\r\n  onClickRespond: PropTypes.func\r\n}\r\n","import React from 'react';\r\nimport ReusableForm from './ReusableForm';\r\n\r\nexport default function EditSurvey() {\r\n  return (\r\n    <div>\r\n      <ReusableForm />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport NewSurveyForm from './NewSurveyForm'\r\nimport NewResponseForm from './NewResponseForm'\r\nimport SurveyList from './SurveyList'\r\nimport SurveyDetail from './SurveyDetail'\r\nimport EditSurvey from './EditSurvey'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport * as a from './../actions'\r\nimport { withFirestore } from 'react-redux-firebase'\r\n\r\nclass SurveyControl extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedSurvey: null,\r\n      editing: false,\r\n      responding: false\r\n    };\r\n  }\r\n\r\n  handleRespondToSurvey = () => {\r\n    this.setState({responding: true})\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (this.state.selectedSurvey != null) {\r\n      this.setState({\r\n        selectedSurvey: null,\r\n        editing: false,\r\n        responding: false\r\n      });\r\n    } else {\r\n      const { dispatch } = this.props;\r\n      const action = a.toggleForm();\r\n      dispatch(action);\r\n    }\r\n  }\r\n\r\n\r\n  handleAddSurvey = (newSurvey) => {\r\n    const {dispatch} = this.props;\r\n    const action = a.addSurvey(newSurvey);\r\n    dispatch(action);\r\n    const action2 = a.toggleForm();\r\n    dispatch(action2);\r\n  }\r\n\r\n  handleChangingSurvey = (id) => {\r\n    const foundSurvey = this.props.mainSurveyList[id];\r\n    this.setState({selectedSurvey: foundSurvey})\r\n  }\r\n\r\n  handleAddResponse = (response) => {\r\n    const {dispatch} = this.props;\r\n    const action = a.addResponse(response);\r\n    dispatch(action);\r\n    this.setState({responding: false});\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let currentlyVisibleState = null;\r\n    let buttonText = null;\r\n    if(this.props.formVisible){\r\n      currentlyVisibleState = <NewSurveyForm onNewSurveyCreation={this.handleAddSurvey}\r\n      onResponseSubmission={this.handleAddResponse}/>\r\n      buttonText = \"Return to List\" ;\r\n    } \r\n    else if (this.state.responding){\r\n      currentlyVisibleState = <NewResponseForm \r\n      survey={this.state.selectedSurvey}\r\n      onResponseSubmission={this.handleAddResponse}\r\n      buttonText='Respond'\r\n      />\r\n      buttonText = 'Return To List';\r\n    }\r\n    else if (this.state.editing){\r\n      currentlyVisibleState = <EditSurvey />\r\n      buttonText = 'Return To List';\r\n    }\r\n    else if(this.state.selectedSurvey != null) {\r\n      currentlyVisibleState = <SurveyDetail \r\n      survey={this.state.selectedSurvey} \r\n      onClickRespond={this.handleRespondToSurvey} />\r\n      buttonText = \"Return to List\" ;\r\n    } \r\n    else {\r\n      currentlyVisibleState = <SurveyList surveyList={this.props.mainSurveyList}\r\n      onSurveySelection={this.handleChangingSurvey}/>\r\n      buttonText = \"Add Survey\";\r\n    }\r\n    return ( \r\n    <div>\r\n      {currentlyVisibleState}\r\n      <button onClick={this.handleClick} className=\"btn btn-dark\">{buttonText}</button>\r\n    </div>\r\n    );    \r\n  }\r\n}\r\n\r\nSurveyControl.propTypes = {\r\n  mainSurveyList: PropTypes.object,\r\n  formVisible: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    mainSurveyList: state.mainSurveyList,\r\n    formVisible: state.formVisible,\r\n    mainResponseList: state.mainResponseList\r\n  }\r\n}\r\n\r\nSurveyControl = connect(mapStateToProps)(SurveyControl);\r\n\r\nexport default SurveyControl;\r\n\r\n\r\n","import * as c from './ActionTypes';\r\n\r\nexport const addSurvey = (survey) => {\r\n  const {name, question1, question2, question3, question4, question5, id} = survey;\r\n  return {\r\n    type: c.ADD_SURVEY,\r\n    name: name,\r\n    question1: question1,\r\n    question2: question2,\r\n    question3: question3,\r\n    question4: question4,\r\n    question5: question5,\r\n    id: id  \r\n  }\r\n}\r\n\r\nexport const toggleForm = () => ({\r\n  type: c.TOGGLE_FORM\r\n});\r\n\r\nexport const deleteSurvey = id => ({\r\n  type: c.DELETE_SURVEY,\r\n  id\r\n});\r\n\r\nexport const addResponse = (response) => {\r\n  const {title, response1, response2, response3, response4, response5, surveyId, id} = response;\r\n  return {\r\n    type: c.ADD_RESPONSE,\r\n    title: title,\r\n    response1: response1,\r\n    response2: response2,\r\n    response3: response3,\r\n    response4: response4,\r\n    response5: response5,\r\n    surveyId: surveyId,\r\n    id: id\r\n  }\r\n}\r\n\r\nexport const deleteResponse = id => ({\r\n  type: c.DELETE_RESPONSE,\r\n  id\r\n});","export const ADD_SURVEY = 'ADD_SURVEY';\r\nexport const DELETE_SURVEY = 'DELETE_SURVEY';\r\nexport const ADD_RESPONSE = 'ADD_RESPONSE';\r\nexport const DELETE_RESPONSE = 'DELETE_RESPONSE';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';","import React from 'react';\nimport Header from './Header'\nimport SurveyControl from './SurveyControl';\n\n//routing happens here\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <Header />\n      <SurveyControl />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import formVisibleReducer from './form-visible-reducer';\r\nimport surveyListReducer from './survey-list-reducer';\r\nimport responseListReducer from './response-list-reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  mainResponseList: responseListReducer,\r\n  formVisible: formVisibleReducer,\r\n  mainSurveyList: surveyListReducer\r\n});\r\n\r\nexport default rootReducer;","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n  const { title, response1, response2, response3, response4, response5, surveyId, id } = action;\r\n  switch (action.type) {\r\n    case c.ADD_RESPONSE:\r\n      return Object.assign({}, state, {\r\n        [id]: {\r\n          title: title,\r\n          response1: response1,\r\n          response2: response2,\r\n          response3: response3,\r\n          response4: response4,\r\n          response5: response5,\r\n          surveyId: surveyId,\r\n          id: id\r\n        }\r\n      });\r\n    case c.DELETE_RESPONSE:\r\n      let newState = {...state};\r\n      delete newState[id];\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}","import * as c from './../actions/ActionTypes'\r\n\r\nexport default (state = false, action) => {\r\n  switch(action.type) {\r\n    case c.TOGGLE_FORM:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = {}, action) => {\r\n  const { name, question1, question2, question3, question4, question5 , id } = action;\r\n  switch (action.type) {\r\n    case c.ADD_SURVEY:\r\n      return Object.assign({}, state, {\r\n        [id]: {\r\n          name: name,\r\n          question1: question1,\r\n          question2: question2,\r\n          question3: question3,\r\n          question4: question4,\r\n          question5: question5,\r\n          id: id\r\n        }\r\n      });\r\n    case c.DELETE_SURVEY:\r\n      let newState = {...state};\r\n      delete newState[id];\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index'\n\nconst store = createStore(rootReducer)\n\nstore.subscribe(() =>\n  console.log(store.getState())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider> ,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}